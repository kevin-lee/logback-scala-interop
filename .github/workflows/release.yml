name: Release

on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  GH_JVM_OPTS: "-Xss64m -Xms1024m -XX:MaxMetaspaceSize=2G -Xmx4G"

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.13.11", binary-version: "2.13", java-version: "11", java-distribution: "temurin" }

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.scala.java-version }}
        distribution: ${{ matrix.scala.java-distribution }}
        cache: sbt
    - uses: sbt/setup-sbt@v1

    - name: sbt GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}

      run: |
        echo "Run] sbt GitHub release"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo 'sbt devOopsGitHubRelease'
        sbt \
          devOopsGitHubRelease

    - name: sbt Publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "Run] sbt ci-release"
        export SOURCE_DATE_EPOCH=$(date +%s)
        echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"

        echo 'sbt -v clean +test +packagedArtifacts ci-release devOopsGitHubReleaseUploadArtifacts'
        sbt \
        -v \
        clean \
        compile \
        packagedArtifacts \
        ci-release

  publish-snapshot:
    if: startsWith(github.ref, 'refs/heads/')

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.13.11", binary-version: "2.13", java-version: "11", java-distribution: "temurin" }

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.scala.java-version }}
        distribution: ${{ matrix.scala.java-distribution }}
        cache: sbt
    - uses: sbt/setup-sbt@v1

    - name: sbt Publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "Run] sbt ci-release"
        export SOURCE_DATE_EPOCH=$(date +%s)
        echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo 'sbt -v clean +test +packagedArtifacts ci-release devOopsGitHubReleaseUploadArtifacts'
        sbt \
        -v \
        clean \
        compile \
        packagedArtifacts \
        ci-release
